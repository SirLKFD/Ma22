@model List<ASI.Basecode.Services.ServiceModels.TrainingCategoryViewModel>
@{
    ViewData["Title"] = "Ma22 | Training Categories";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var userRole = HttpContextAccessor.HttpContext.Session.GetInt32("AccountRole");

}
<link href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined" rel="stylesheet" />

<!-- Title Section -->
<div class="mx-auto mt-10 w-[95%] max-w-7xl">
    <div class="mb-8 flex flex-col gap-4 md:flex-row md:items-center md:justify-between">
        <div>
            <h1 class="text-4xl font-bold uppercase tracking-tight text-[#222]">Training Categories</h1>
        </div>

        <!-- Search + Add -->
        <div class="flex flex-col gap-4 sm:flex-row">
            <form method="get" asp-action="AdminTrainingCategory" class="relative w-full sm:w-[450px]">
                <span class="material-symbols-outlined -translate-y-1/2 absolute left-3 top-1/2 text-gray-400">search</span>
                <input type="search" name="search" value="@ViewBag.Search" placeholder="Search Category..."
                       class="h-12 w-full rounded-full border border-gray-300 bg-white pl-10 pr-[100px] text-sm text-gray-800 shadow-sm focus:outline-none focus:ring-2 focus:ring-[#EAC231]" />
                <button type="submit"
                        class="absolute right-2 top-[6px] rounded-full bg-[#EAC231] px-7 py-2 text-sm font-medium text-black transition hover:bg-[#cfa221]">
                    Search
                </button>
            </form>

             @if (userRole == 2) 
            {
            <button class="rounded-full bg-[#EAC231] px-6 py-2 text-sm font-semibold text-black shadow-md transition hover:bg-[#cfa221]"
                    onclick="addTrainingCategory()">
                Add+
            </button>
            }
        </div>
    </div>

    <!-- Grid of Category Cards -->
    <div class="grid grid-cols-1 gap-8 sm:grid-cols-2 lg:grid-cols-3">
        @foreach (var category in Model)
        {
            <div class="flex min-h-[420px] flex-col overflow-hidden rounded-2xl border border-gray-200 bg-white shadow-md transition hover:shadow-xl animate-slide-up opacity-0 animate-fade-in">
                <!-- Cover Image -->
                <div class="h-[180px]">
                    @if (!string.IsNullOrEmpty(category.CoverPicture))
                    {
                        <img class="h-full w-full object-cover" src="@category.CoverPicture" alt="Cover Image" />
                    }
                    else
                    {
                        <div class="flex h-full w-full items-center justify-center bg-gradient-to-br from-[#640A16] via-[#8B1538] to-[#640A16] text-center text-sm font-medium text-white">
                            <span class="material-symbols-outlined text-4xl opacity-50">image</span>
                            <p class="ml-2">No Cover Image</p>
                        </div>
                    }
                </div>

                <!-- Details -->
                <div class="flex flex-grow flex-col p-4">
                    <!-- Header -->
                    <div class="mb-2 flex items-center justify-between">
                        <h2 class="text-xl font-bold text-[#222]">@(category.CategoryName != null && category.CategoryName.Length > 20 ? category.CategoryName.Substring(0, 20) + "..." : category.CategoryName)</h2>
                         @if (userRole == 2) 
                        {
                        <div class="flex gap-2 text-gray-600">
                            <span class="material-symbols-outlined cursor-pointer hover:text-black"
                                  onclick="openEditTrainingCategory('@category.Id', '@category.CoverPicture', '@category.CategoryName', '@category.Description')">edit</span>
                            <span class="material-symbols-outlined cursor-pointer text-red-500 hover:text-red-700"
                                  onclick="openDeleteTrainingCategory('@category.Id', '@category.CoverPicture', '@category.CategoryName', '@category.Description', '@category.UpdatedTime', '@category.AccountFirstName', '@category.AccountLastName')">delete</span>
                        </div>
                        }
                    </div>

                    <p class="line-clamp-4 text-sm text-gray-600">@category.Description</p>

                    <!-- Footer -->
                    <div class="mt-auto flex items-end justify-between pt-4 text-xs text-gray-500">
                        <div>
                            <p><strong>Modified:</strong> @category.UpdatedTime.ToString("MMM dd, yyyy")</p>
                            <p><strong>By:</strong> @category.AccountFirstName @category.AccountLastName</p>
                        </div>
                        <a href="@Url.Action("TrainingCategoryDetails", "AdminTrainingCategory", new { categoryId = category.Id })"
                           class="rounded-full bg-[#640A16] px-4 py-2 text-xs font-semibold text-white transition hover:bg-[#4e0712]">
                            Access
                        </a>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Pagination -->
    @if (ViewBag.TotalCount > ViewBag.PageSize)
    {
        var totalPages = (int)Math.Ceiling((decimal)ViewBag.TotalCount / ViewBag.PageSize);
        <div class="mt-10 flex items-center justify-between text-sm text-gray-600">

            <!-- Total Count -->
            <div>Total @ViewBag.TotalCount items</div>

            <!-- Pagination and Page Controls -->
            <div class="flex items-center gap-4">
                <ul class="flex gap-1 text-sm">
                    @if (ViewBag.CurrentPage > 1)
                    {
                        <li>
                            <a href="@Url.Action("AdminTrainingCategory", new { page = ViewBag.CurrentPage - 1, search = ViewBag.Search, pageSize = ViewBag.PageSize })"
                               class="border border-gray-300 bg-white px-3 py-2 text-gray-600 transition hover:bg-gray-100 hover:text-black">
                                Prev
                            </a>
                        </li>
                    }

                    @for (int i = 1; i <= totalPages; i++)
                    {
                        var isCurrent = i == ViewBag.CurrentPage;
                        var pageClass = isCurrent
                        ? "bg-[#EAC231] text-black font-semibold"
                        : "bg-white text-gray-600 hover:bg-gray-100 hover:text-black";

                        <li>
                            <a href="@Url.Action("AdminTrainingCategory", new { page = i, search = ViewBag.Search, pageSize = ViewBag.PageSize })"
                               class="border border-gray-300 px-3 py-2 transition @pageClass">
                                @i
                            </a>
                        </li>
                    }

                    @if (ViewBag.CurrentPage < totalPages)
                    {
                        <li>
                            <a href="@Url.Action("AdminTrainingCategory", new { page = ViewBag.CurrentPage + 1, search = ViewBag.Search, pageSize = ViewBag.PageSize })"
                               class="border border-gray-300 bg-white px-3 py-2 text-gray-600 transition hover:bg-gray-100 hover:text-black">
                                Next
                            </a>
                        </li>
                    }
                </ul>

                <!-- Page Size & Go To -->
                <form method="get" action="@Url.Action("AdminTrainingCategory")" class="flex items-center gap-2">
                    <input type="hidden" name="search" value="@ViewBag.Search" />

                    <!-- Page Size Dropdown -->
                    <select name="pageSize" onchange="this.form.submit()" class="rounded border border-gray-300 px-2 py-1 text-sm">
                        @{
                            int total = ViewBag.TotalCount;
                            int selected = ViewBag.PageSize;
                            for (int i = 6; i <= total; i += 6)
                            {
                                <option value="@i" selected="@(i == selected)">@i / page</option>
                            }
                        }
                    </select>

                    <!-- Go to Page -->
                    <span class="text-sm text-gray-600">Go to</span>
                    <input type="number" name="page" min="1" max="@totalPages"
                           class="w-16 rounded border border-gray-300 px-2 py-1 text-sm text-center"
                           value="@ViewBag.CurrentPage" />
                    <span class="text-sm text-gray-600">Page</span>
                </form>
            </div>
        </div>
    }

</div>

<!-- Modals -->
@await Html.PartialAsync("~/Views/Admin/AdminAddTrainingCategory.cshtml", new TrainingCategoryViewModel())
@await Html.PartialAsync("~/Views/Admin/AdminEditTrainingCategory.cshtml", new TrainingCategoryViewModel())
@await Html.PartialAsync("~/Views/Admin/AdminDelTrainingCategory.cshtml", new TrainingCategoryViewModel())

<script type="text/javascript">
    function addTrainingCategory(){
        document.getElementById('addTrainingCategory').classList.remove('hidden');
    }
    function closeTrainingCategory(){
        document.getElementById('addTrainingCategory').classList.add('hidden');
    }
    function closeEditTrainingCategory(){
        document.getElementById('editTrainingCategory').classList.add('hidden');
    }
    function closeDeleteTrainingCategory(){
        document.getElementById('deleteTrainingCategory').classList.add('hidden');
    }
</script>
