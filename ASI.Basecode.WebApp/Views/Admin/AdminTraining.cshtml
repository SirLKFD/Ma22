@model List<ASI.Basecode.Services.ServiceModels.TrainingViewModel>
@{
    var pageTitle = "Trainings";
    var isCategory = ViewBag.CategoryId != null;
    var categoryId = ViewBag.CategoryId;
    var search = ViewBag.Search ?? "";
    if (ViewBag.CategoryName != null)
    {
        pageTitle = ViewBag.CategoryName;
    }
    ViewData["Title"] = pageTitle;
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="flex flex-col gap-8 mx-20 mt-12 mb-16">
    <h1 class="text-4xl uppercase font-weight-bold align-self-center ">@pageTitle</h1>
    @if (isCategory)
    {
        <form method="get" action="/admin/TrainingCategoryDetails" class="relative w-full sm:w-[500px] align-self-center mb-8">
            <input type="hidden" name="categoryId" value="@categoryId" />
            <input type="search" name="search" id="default-search"
                   class="w-full h-12 rounded-full border border-gray-300 px-5 pr-[180px] text-sm text-gray-900 shadow-sm focus:outline-none focus:ring-2 focus:ring-[#EAC231] transition"
                   placeholder="Search Trainings..." value="@search" />
            <div class="absolute top-1/2 right-2 -translate-y-1/2 flex items-center gap-2">
                <button type="submit"
                        class="rounded-full bg-[#EAC231] px-4 py-2 text-sm font-medium text-black hover:bg-[#cfa221] transition">
                    Search
                </button>
            </div>
        </form>
    }
    else
    {
        <form method="get" asp-action="AdminTraining" class="relative w-full sm:w-[500px] align-self-center mb-8">
            <input type="search" name="search" id="default-search"
                   class="w-full h-12 rounded-full border border-gray-300 px-5 pr-[180px] text-sm text-gray-900 shadow-sm focus:outline-none focus:ring-2 focus:ring-[#EAC231] transition"
                   placeholder="Search Trainings..." value="@search" />
            <div class="absolute top-1/2 right-2 -translate-y-1/2 flex items-center gap-2">
                <button type="submit"
                        class="rounded-full bg-[#EAC231] px-4 py-2 text-sm font-medium text-black hover:bg-[#cfa221] transition">
                    Search
                </button>
            </div>
        </form>
    }
    <button class="align-self-end rounded-full bg-[#EAC231] py-2 w-[100px] text-sm font-semibold text-black shadow-md hover:bg-[#cfa221] transition" onclick="addTraining()">
        Add+
    </button>
    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8">
        @if (Model != null && Model.Any())
        {
            foreach (var training in Model)
            {
                <div class="bg-white border border-gray-200 rounded-2xl shadow-md overflow-hidden outline outline-1 outline-black flex flex-col min-h-[400px]">
                    <div class="h-[180px]">
                        @if (!string.IsNullOrEmpty(training.CoverPicture))
                        {
                            <img class="w-full h-full object-cover outline outline-1 outline-black" src="@training.CoverPicture" alt="Cover Image" />
                        }
                        else
                        {
                            <div class="flex items-center justify-center w-full h-full outline outline-1 outline-black">
                                <span class="font-bold text-center w-full">No Image Provided</span>
                            </div>
                        }
                    </div>
                    <div class="p-4 flex flex-col flex-grow">
                        <div class="flex justify-between items-center mb-2">
                            <h2 class="text-xl font-semibold text-gray-800">@training.TrainingName</h2>
                            <div class="flex gap-2 text-gray-600">
                                <span class="material-symbols-outlined cursor-pointer hover:text-black" onclick="openEditTraining('@training.Id', '@training.TrainingName', '@training.TrainingCategoryId', '@training.SkillLevel', '@training.Duration', '@training.CourseCode', '@training.Description', '@training.CoverPicture')">edit</span>
                                <span class="material-symbols-outlined cursor-pointer text-red-500 hover:text-red-700" onclick="openDeleteTraining('@training.Id', '@training.TrainingName', '@training.TrainingCategoryId', '@training.SkillLevel', '@training.CourseCode', '@training.Description', '@training.CoverPicture', '@training.UpdatedTime', '@training.AccountFirstName', '@training.AccountLastName')">delete</span>
                            </div>
                        </div>
                        <p class="text-sm text-gray-600 line-clamp-3">@training.Description</p>
                        <div class="flex justify-between items-end text-xs text-gray-500 mt-auto pt-4">
                            <div>
                                <p><strong>Modified:</strong> @training.UpdatedTime.ToString("MMM dd, yyyy")</p>
                                <p><strong>By:</strong> @training.AccountFirstName @training.AccountLastName</p>
                            </div>
                            <a href="@Url.Action("AdminTrainingTopics", "AdminTraining", new { trainingId = training.Id })" class="bg-[#640A16] text-white font-weight-bold px-4 py-2 rounded-full text-xs hover:bg-[#4e0712] transition">
                                Access
                            </a>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-span-3 text-center text-gray-500 py-8">No trainings found.</div>
        }
    </div>
    @if (ViewBag.TotalCount > ViewBag.PageSize)
    {
        var totalPages = (int)Math.Ceiling((decimal)ViewBag.TotalCount / ViewBag.PageSize);
        <div class="flex justify-end mt-8">
            <nav>
                <ul class="inline-flex gap-1 text-sm">
                    @if (ViewBag.CurrentPage > 1)
                    {
                        <li>
                            <a class="px-3 py-2 rounded-l-full border border-gray-300 bg-white text-gray-600 hover:bg-gray-100 transition"
                               href="@(isCategory ? Url.Action("TrainingCategoryDetails", new { categoryId = categoryId, page = Math.Max(ViewBag.CurrentPage - 1, 1), search = search }) : Url.Action("AdminTraining", new { page = Math.Max(ViewBag.CurrentPage - 1, 1), search = search }))">
                                Previous
                            </a>
                        </li>
                    }
                    @for (int i = 1; i <= totalPages; i++)
                    {
                        <li>
                            <a class="px-3 py-2 border border-gray-300 @(i == ViewBag.CurrentPage ? "bg-blue-50 text-blue-600" : "bg-white text-gray-600 hover:bg-gray-100 hover:text-gray-800") rounded-md transition"
                               href="@(isCategory ? Url.Action("TrainingCategoryDetails", new { categoryId = categoryId, page = i, search = search }) : Url.Action("AdminTraining", new { page = i, search = search }))">
                                @i
                            </a>
                        </li>
                    }
                    @if (ViewBag.CurrentPage < totalPages)
                    {
                        <li>
                            <a class="px-3 py-2 rounded-r-full border border-gray-300 bg-white text-gray-600 hover:bg-gray-100 transition"
                               href="@(isCategory ? Url.Action("TrainingCategoryDetails", new { categoryId = categoryId, page = Math.Min(ViewBag.CurrentPage + 1, totalPages), search = search }) : Url.Action("AdminTraining", new { page = Math.Min(ViewBag.CurrentPage + 1, totalPages), search = search }))">
                                Next
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    }
</div>
@await Html.PartialAsync("~/Views/Admin/AddTraining.cshtml", new TrainingViewModel())
@await Html.PartialAsync("~/Views/Admin/EditTraining.cshtml", new TrainingViewModel())
@await Html.PartialAsync("~/Views/Admin/DeleteTraining.cshtml", new TrainingViewModel())
<script>
    function addTraining() {
        document.getElementById('addTraining').classList.remove('hidden');
    }
    function closeAddTraining() {
        document.getElementById('addTraining').classList.add('hidden');
    }
    function closeEditTraining() {
        document.getElementById('editTraining').classList.add('hidden');
    }
    function closeDeleteTraining() {
        document.getElementById('deleteTraining').classList.add('hidden');
    }
</script>


