@model PasswordResetViewModel
@using static ASI.Basecode.Resources.Views.Screen
@section styles {
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link rel="stylesheet" href="~/css/login.css" asp-append-version="true">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
}
@{
    ViewBag.LoginView = true;
    ViewData["Title"] = "Ma22 | Reset Password";
    var showSuccess = TempData["SuccessMessage"] != null;
}
<div class="login-container reset-container @(showSuccess ? "reset-success" : "")" id="container">
    <!-- Left Side Image -->
    <div class="login-image-container @(showSuccess ? "move-center" : "")" id="imageContainer">
        <img src="~/img/forgotPassPicture.png" alt="Illustration" class="login-image">
    </div>

    <!-- Success message -->
    <div id="successMessage" class="success-message" style="@(showSuccess ? "display:block;" : "display:none;")">
        @TempData["SuccessMessage"]
    </div>

    <!-- Right Side Card -->
    <div class="login-content" id="formContainer" style="@(showSuccess ? "display:none;" : "")">
        <div class="login-card" id="resetCard">
            <div class="logo-container">
                <img src="~/img/Logo.png" alt="logo" class="logo">
            </div>
            <p class="welcome-back">Reset your password</p>
            <h2 class="login-heading">Enter New Password</h2>

            @using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.Token)

                <div class="form-group">
                    <label for="newPassword">Enter your new password</label>
                    @Html.PasswordFor(m => m.NewPassword, new { @class = "form-input", placeholder = "New password", id = "newPassword" })
                    @Html.ValidationMessageFor(m => m.NewPassword, "", new { @class = "validation-error" })
                </div>
                <div class="form-group">
                    <label for="confirmPassword">Confirm your new password</label>
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-input", placeholder = "Confirm password", id = "confirmPassword" })
                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "validation-error" })
                </div>

                <div class="button-section">
                    <button type="submit" class="login-button">Confirm</button>
                </div>
            }
        </div>
    </div>

    <!-- Back to login button -->
    <div class="back-to-login" id="backToLogin" style="@(showSuccess ? "display:block;" : "display:none;")">
        <a href="/Account/Login" class="login-button">Proceed to Login</a>
    </div>
</div>

@section scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const showSuccess = @(showSuccess.ToString().ToLower());

            if (showSuccess) {
                const container = document.getElementById("container");
                const imageContainer = document.getElementById("imageContainer");
                const backToLogin = document.getElementById("backToLogin");
                const successMessage = document.getElementById("successMessage");

                setTimeout(() => {
                    imageContainer.classList.add("move-center");
                    successMessage.style.display = "block";
                    backToLogin.style.display = "block";
                }, 400);
            }
        });
    </script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
