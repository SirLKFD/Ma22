@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
<link href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined" rel="stylesheet" />


@{
    var currentController = ViewContext.RouteData.Values["controller"]?.ToString();
    var currentAction = ViewContext.RouteData.Values["action"]?.ToString();
    var isProfile = currentController == "Admin" && currentAction == "UserMaster";
    var isCategory = currentController == "AdminTrainingCategory" && currentAction == "AdminTrainingCategory";
    var isDashboard = currentController == "AdminDashboard" && currentAction == "AdminDashboard";
    var isTraining = currentController == "AdminTraining" && currentAction == "AdminTraining";
    var userId = HttpContextAccessor.HttpContext.Session.GetInt32("AccountId");
    var userRole = HttpContextAccessor.HttpContext.Session.GetInt32("AccountRole");
}


<div class="fixed flex flex-row">
    <aside id="sidebar" class="group flex h-screen w-24 flex-col bg-[#640A16] text-white transition-all duration-300 hover:w-64">
        <!-- Logo -->
        <div class="flex justify-center p-4">
            <img src="~/img/Logo.png" alt="MA22 Logo" class="w-15 h-15" />
        </div>

        <!-- Navigation -->
        <ul class="flex-grow space-y-4 px-2">
             <li>
                    <a asp-controller="AdminDashboard" asp-action="AdminDashboard" class="flex justify-center space-x-4 rounded-md p-3 transition duration-200 group-hover:justify-start hover:bg-yellow-400 hover:text-black hover:no-underline @(isDashboard ? "bg-yellow-400 text-black" : "")">
                        <span class="material-symbols-outlined text-[25px]">dashboard</span>
                        <span class="hidden text-sm group-hover:inline">Dashboard</span>
                    </a>
                </li>
           
            @if (userRole == 2) 
            {
                <li>
                    <a asp-controller="Admin" asp-action="UserMaster" class="flex justify-center space-x-4 rounded-md p-3 transition duration-200 group-hover:justify-start hover:bg-yellow-400 hover:text-black hover:no-underline @(isProfile ? "bg-yellow-400 text-black" : "")">
                        <span class="material-symbols-outlined text-[25px]">groups_3</span>
                        <span class="hidden text-sm group-hover:inline">Profiles</span>
                    </a>
                </li>
            }
                 <li>
                <a asp-controller="AdminTrainingCategory" asp-action="AdminTrainingCategory" class="flex justify-center space-x-4 rounded-md p-3 transition duration-200 group-hover:justify-start hover:bg-yellow-400 hover:text-black hover:no-underline @(isCategory ? "bg-yellow-400 text-black" : "")">
                    <span class="material-symbols-outlined text-[25px]">category</span>
                    <span class="hidden text-sm group-hover:inline">Training Categories</span>
                </a>
            </li>
            
            <li>
                <a asp-controller="AdminTraining" asp-action="AdminTraining" class="flex justify-center space-x-4 rounded-md p-3 transition duration-200 group-hover:justify-start hover:bg-yellow-400 hover:text-black hover:no-underline @(isTraining ? "bg-yellow-400 text-black" : "")">
                    <span class="material-symbols-outlined text-[25px]">book</span>
                    <span class="hidden text-sm group-hover:inline">Trainings</span>
                </a>
            </li>
        </ul>

        <!-- Bottom Section with Dropdown -->
        <div class="relative mb-10 px-2">
            <button onclick="toggleDropDown()" class="flex w-full items-center justify-center space-x-4 rounded-md p-3 transition duration-200 group-hover:justify-start hover:bg-yellow-400 hover:text-black hover:no-underline focus:outline-none">
                @{
                    var profilePicture = HttpContextAccessor.HttpContext.Session.GetString("ProfilePicture");
                }
                @if (!string.IsNullOrEmpty(profilePicture))
                {
                    <img src="@profilePicture" alt="Profile" class="h-8 w-8 rounded-full object-cover" />
                }
                else
                {
                    <span class="material-symbols-outlined text-[25px]">person</span>
                }
                <span class="hidden text-sm group-hover:inline">@HttpContextAccessor.HttpContext.Session.GetString("UserName")</span>
                <span class="material-symbols-outlined ml-auto hidden text-[16px] group-hover:inline">arrow_drop_up</span>
            </button>

            <!-- Improved Dropdown Menu -->
            <div id="dropdownMenu" class="invisible absolute bottom-full left-0 right-0 z-50 mb-2 translate-y-2 transform overflow-hidden rounded-lg border border-gray-200 bg-white opacity-0 shadow-xl transition-all duration-300">
                <div class="py-2">
                    

                    <!-- Menu Items -->
                    <a href="javascript:void(0);" onclick="editDetails(@userId)" class="flex items-center space-x-3 px-4 py-3 text-black transition-colors duration-200 hover:bg-yellow-400 hover:text-black hover:no-underline">
                        <span class="material-symbols-outlined text-[20px]">account_circle</span>
                        <span class="text-sm">View Profile</span>
                    </a>

                    <div class="my-1 border-t border-gray-100"></div>

                    <!-- Logout -->
                    <a href="/Account/SignOutUser" class="flex items-center space-x-3 px-4 py-3 text-red-600 text-black transition-colors duration-200 hover:bg-yellow-400 hover:text-black hover:no-underline">
                        <span class="material-symbols-outlined text-[20px]">logout</span>
                        <span class="text-sm font-medium">Logout</span>
                    </a>
                </div>
            </div>
        </div>
    </aside>
</div>


<script>
    function toggleDropDown() {
        const dropdown = document.getElementById('dropdownMenu');
        const isVisible = !dropdown.classList.contains('opacity-0');

        if (isVisible) {
            closeDropdown();
        } else {
            openDropdown();
        }
    }

    function openDropdown() {
        const dropdown = document.getElementById('dropdownMenu');
        dropdown.classList.remove('opacity-0', 'invisible', 'translate-y-2');
    }

    function closeDropdown() {
        const dropdown = document.getElementById('dropdownMenu');
        dropdown.classList.add('opacity-0', 'invisible', 'translate-y-2');
    }

    // Close dropdown when sidebar is unhovered
    document.getElementById('sidebar').addEventListener('mouseleave', function() {
        closeDropdown();
    });

    // Close dropdown when clicking outside
    document.addEventListener('click', function(event) {
        const dropdown = document.getElementById('dropdownMenu');
        const sidebar = document.getElementById('sidebar');

        if (!sidebar.contains(event.target)) {
            closeDropdown();
        }
    });

    // Prevent dropdown from closing when hovering over the dropdown itself
    document.getElementById('dropdownMenu').addEventListener('mouseenter', function(event) {
        event.stopPropagation();
    });

</script>
