@model ASI.Basecode.Services.ServiceModels.BrowseTrainingsViewModel
@{
    ViewData["Title"] = "Ma22 | My Trainings";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
    bool showAll = Context.Request.Query["showAll"] == "true";
    // Only enrolled trainings
    var enrolledTrainings = Model.Trainings;
    var trainingsToDisplay = showAll ? enrolledTrainings : enrolledTrainings.Take(9);
    // Only categories that have at least one enrolled training
    var enrolledCategoryIds = enrolledTrainings.Select(t => t.TrainingCategoryId).Distinct().ToList();
    var categoriesToDisplay = Model.Categories.Where(c => enrolledCategoryIds.Contains(c.Id)).ToList();
}


<div class="animate-slide-up animate-fade-in my-20 flex flex-col items-center gap-10 opacity-0">
    <h1 class="font-weight-bold text-6xl">
        Enrolled Trainings
    </h1>
    <p class="font-semibold">Continue where you left off.</p>
    <div class="space-r-2 relative w-1/2">
        <div class="pointer-events-none absolute inset-y-0 left-0 flex items-center pl-4">
            <span class="material-symbols-outlined text-xl text-gray-400">search</span>
        </div>
        <input id="usertrainings-search-input" type="search" name="search"
                class="text-md h-12 w-full rounded-xl border border-gray-300 px-5 py-4 pr-[90px] text-gray-900 shadow-sm transition focus:outline-none focus:ring-2 focus:ring-[#EAC231]"
                placeholder="What are you looking for?" value="@Context.Request.Query["search"]" />
        <button id="usertrainings-search-btn" type="button"
                class="absolute right-2 top-[6px] rounded-xl bg-[#EAC231] px-4 py-2 text-sm font-medium text-black transition hover:bg-[#cfa221]">
            Search
        </button>
    </div>
</div>

@* <div class="-mx-20 mb-20 flex w-screen flex-col justify-center gap-5 bg-white p-5">
    <div class="mb-10 flex flex-col items-center gap-5 text-center">
        <h2 class="font-weight-bold text-4xl">Explore by Category</h2>
        <p>Choose from our popular learning paths</p>
    </div>
    <div class="flex items-center justify-center gap-x-10" id="usertrainings-category-list-container">
        <button id="usertrainings-category-left-btn" class="h-10 w-10 rounded-full bg-[#EAC231] font-semibold text-black shadow transition hover:bg-[#cfa221]">
            &#8592;
        </button>

        <div id="usertrainings-category-cards-wrapper" class="flex justify-center gap-10">
            @if (categoriesToDisplay.Any())
            {
                foreach (var category in categoriesToDisplay)
                {
                    <div class="category-card flex aspect-square w-[150px] flex-col items-center justify-center gap-4 rounded-xl bg-white p-4 text-black shadow-md transition-all duration-300 hover:scale-110 hover:cursor-pointer"
                         data-category-id="@category.Id" data-category-description="@category.Description">
                        <span class="material-symbols-outlined rounded-xl bg-[#FFE9C6] p-2 text-black text-[40px]">
                            code
                        </span>
                        <p class="text-center text-sm font-semibold">@category.CategoryName</p>
                    </div>
                }
            }
        </div>

        <button id="usertrainings-category-right-btn" class="h-10 w-10 rounded-full bg-[#EAC231] font-semibold text-black shadow transition hover:bg-[#cfa221]">
            &#8594;
        </button>
    </div>
</div> *@

@* <div class="my-10 flex flex-col items-center">
    <h2 id="usertrainings-title" class="font-weight-bold text-4xl">Trainings</h2>
    <p id="usertrainings-subtitle">Hand-picked courses from our expert instructors</p>
    <div id="usertrainings-loading" class="mt-2" style="display:none;">
        <span class="material-symbols-outlined animate-spin text-3xl">hourglass_empty</span>
    </div>
</div> *@

<div id="usertrainings-container" class=" mb-20 grid grid-cols-1 gap-8 sm:grid-cols-2 lg:grid-cols-3">
    @if (enrolledTrainings.Any())
    {
        foreach (var training in trainingsToDisplay)
        {
            <div class="flex min-h-[420px] flex-col overflow-hidden rounded-2xl border border-gray-200 bg-white shadow-md transition hover:shadow-xl" data-aos="fade-up" data-aos-anchor-placement="top-bottom">
                <!-- Cover Image -->
                <div class="h-[180px]">
                    @if (!string.IsNullOrEmpty(training.CoverPicture))
                    {
                        <img class="h-full w-full object-cover" src="@training.CoverPicture" alt="Cover Image" />
                    }
                    else
                    {
                        <div class="flex h-full w-full items-center justify-center bg-gradient-to-br from-[#640A16] via-[#8B1538] to-[#640A16] text-center text-sm font-medium text-white">
                            <span class="material-symbols-outlined text-4xl opacity-50">image</span>
                            <p class="ml-2">No Cover Image</p>
                        </div>
                    }
                </div>
                <!-- Details -->
                <div class="flex flex-grow flex-col p-4">
                    <!-- Header -->
                    <div class="mb-2 flex items-center justify-between">
                        <h2 class="text-xl font-bold text-[#222]">@training.TrainingName</h2>
                    </div>
                    <div class="mb-2 flex gap-2">
                        @if (!string.IsNullOrEmpty(training.SkillLevelName))
                        {
                            var skillColor = training.SkillLevelName == "Beginner" ? "bg-green-200 text-green-800"
                                            : training.SkillLevelName == "Intermediate" ? "bg-yellow-200 text-yellow-800"
                                            : "bg-red-200 text-red-800";
                            <span class="rounded-full px-3 py-1 text-xs font-semibold @skillColor">
                                @training.SkillLevelName
                            </span>
                        }
                        @if (!string.IsNullOrEmpty(training.TrainingCategoryName))
                        {
                            <span class="rounded-full bg-orange-200 px-3 py-1 text-xs font-semibold text-orange-800">
                                @training.TrainingCategoryName
                            </span>
                        }
                    </div>
                    <p class="mt-2 line-clamp-4 text-sm text-gray-600">@training.Description</p>
                    <!-- Footer -->
                    <div class="mt-auto flex items-end justify-between pt-4 text-xs text-gray-500">
                        <div>
                            <p><strong>Modified:</strong> @training.UpdatedTime.ToString("MMM dd, yyyy")</p>
                            <p><strong>By:</strong> @training.AccountFirstName @training.AccountLastName</p>
                        </div>
                        <a asp-controller="UserTopic" asp-action="Topics" asp-route-trainingId="@training.Id"
                           class="rounded-full bg-[#640A16] px-4 py-2 text-xs font-semibold text-white transition hover:bg-[#4e0712]">
                            Access
                        </a>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div class="col-span-3 py-8 text-center text-gray-500">No trainings found.</div>
    }

</div>
@if (!showAll && enrolledTrainings.Count > 9)
{
    <div class="mt-5 flex justify-center">
        <button id="loadMoreUserTrainingsBtn" class="cursor-pointer" 
                data-currently-displayed="@(trainingsToDisplay.Count())" 
                data-total-trainings="@enrolledTrainings.Count">
            <span class="material-symbols-outlined animate-bounce text-[50px]">
                keyboard_double_arrow_down
            </span>
        </button>
    </div>
}

@section Scripts {
    <!-- UserTrainings AJAX Script -->
    <script src="~/js/usertrainings_AJAX.js" asp-append-version="true"></script>
}

