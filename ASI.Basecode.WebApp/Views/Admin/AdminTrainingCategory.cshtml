@model List<ASI.Basecode.Services.ServiceModels.TrainingCategoryViewModel>

@{
    ViewData["Title"] = "Admin Training Category";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";

    int totalCount = ViewBag.TotalCount;
    int pageSize = ViewBag.PageSize;
    int currentPage = ViewBag.CurrentPage;
    string search = ViewBag.Search as string ?? "";
    int totalPages = (int)Math.Ceiling((decimal)totalCount / pageSize);

}
<link href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined" rel="stylesheet" />
<div class="mx-20 mt-12 mb-16 flex flex-col gap-8">
    <!-- Header and Action Row -->
    <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4">
        <h1 class="text-4xl font-bold text-[#222] tracking-tight uppercase">Training Categories</h1>

        <div class="flex flex-col sm:flex-row gap-4">
            <!-- Search Field -->
            <form class="relative w-full sm:w-[400px]" method="get" action="@Url.Action("AdminTrainingCategory")">
                <input type="hidden" name="page" value="1" />
                <span class="material-symbols-outlined absolute left-3 top-1/2 -translate-y-1/2 text-gray-400 text-lg">
                    search
                </span>
                <input type="search" name="search" value="@search"
                       placeholder="Search Category..."
                       class="w-full h-12 pl-10 pr-[100px] rounded-full border border-gray-300 bg-white text-sm text-gray-800 shadow-sm focus:outline-none focus:ring-2 focus:ring-[#EAC231]" />
                <button type="submit"
                        class="absolute right-2 top-[6px] rounded-full bg-[#EAC231] px-4 py-2 text-sm font-medium text-black hover:bg-[#cfa221] transition">
                    Search
                </button>
            </form>

            <!-- Add Button -->
            <button class="rounded-full bg-[#EAC231] px-6 py-2 text-sm font-semibold text-black shadow-md hover:bg-[#cfa221] transition" onclick="addTrainingCategory()">
                Add+
            </button>
        </div>
    </div>

    <!-- Cards Grid -->
    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8">
        @foreach (var category in Model)
        {
            <div class="bg-white border border-gray-200 rounded-2xl shadow-md overflow-hidden outline outline-1 outline-black flex flex-col min-h-[400px]">
                <!-- Image -->
                <div class="h-[180px]">
                    <img class="w-full h-full object-cover outline outline-1 outline-black" src="@category.CoverPicture" alt="Cover Image" />
                </div>

                <!-- Content -->
                <div class="p-4 flex flex-col flex-grow">
                    <!-- Title and Actions -->
                    <div class="flex justify-between items-center mb-2">
                        <h2 class="text-xl font-semibold text-gray-800">@category.CategoryName</h2>
                        <div class="flex gap-2 text-gray-600">
                            <span class="material-symbols-outlined cursor-pointer hover:text-black" onclick="editTrainingCategory()">edit</span>
                            <span class="material-symbols-outlined cursor-pointer text-red-500 hover:text-red-700">delete</span>
                        </div>
                    </div>

                    <!-- Description -->
                    <p class="text-sm text-gray-600 line-clamp-3">@category.Description</p>

                    <!-- Footer -->
                    <div class="flex justify-between items-end text-xs text-gray-500 mt-auto pt-4">
                        <div>
                            <p><strong>Modified:</strong> @category.UpdatedTime.ToString("MMM dd, yyyy")</p>
                            <p><strong>By:</strong> @category.CreatedBy</p>
                        </div>
                        <button class="bg-[#640A16] text-white font-weight-bold px-4 py-2 rounded-full text-xs hover:bg-[#4e0712] transition">
                            Access
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Pagination -->
    <div class="flex justify-end mt-10">
        <nav class="flex items-center space-x-2">
            @if (currentPage > 1)
            {
                <a href="@Url.Action("AdminTrainingCategory", new { page = currentPage - 1, search = search })"
                   class="px-4 py-2 rounded bg-gray-200 hover:bg-gray-300 text-sm">Previous</a>
            }

            @for (int i = 1; i <= totalPages; i++)
            {
                <a href="@Url.Action("AdminTrainingCategory", new { page = i, search = search })"
                   class="px-4 py-2 rounded @(i == currentPage ? "bg-[#EAC231] text-black font-bold" : "bg-gray-100 text-gray-800") text-sm">
                    @i
                </a>
            }

            @if (currentPage < totalPages)
            {
                <a href="@Url.Action("AdminTrainingCategory", new { page = currentPage + 1, search = search })"
                   class="px-4 py-2 rounded bg-gray-200 hover:bg-gray-300 text-sm">Next</a>
            }
        </nav>
    </div>
</div>

@await Html.PartialAsync("~/Views/Admin/AdminAddTrainingCategory.cshtml", new TrainingCategoryViewModel())
@await Html.PartialAsync("~/Views/Admin/AdminEditTrainingCategory.cshtml", new TrainingCategoryViewModel())

 <script type="text/javascript">
        function addTrainingCategory(){
            document.getElementById('addTrainingCategory').classList.remove('hidden');
        }

        function closeTrainingCategory(){
            document.getElementById('addTrainingCategory').classList.add('hidden');
        }

        function editTrainingCategory(){
            document.getElementById('editTrainingCategory').classList.remove('hidden');
        }
        function closeEditTrainingCategory(){
            document.getElementById('editTrainingCategory').classList.add('hidden');
        }
</script>

