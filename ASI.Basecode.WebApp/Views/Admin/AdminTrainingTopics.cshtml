@model List<ASI.Basecode.Services.ServiceModels.TopicViewModel>
@using System.Text.Json

@{
    ViewData["Title"] = "Admin Training Topics";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var training = ViewData["training"] as TrainingViewModel;
}
@section NoPadding {}



<div class="position-relative w-full mb-24">

    <!--Cover Photo-->
    <div class="flex items-center justify-center bg-[#C6FFCD] w-full h-[150px] object-cover">
        @if (!string.IsNullOrEmpty(training.CoverPicture))
        {
            <img src="@training.CoverPicture" alt="Cover Photo" class="w-full h-full object-cover">
        }
        else
        {
            <div class="flex items-center justify-center w-full h-full">
                <span class="font-bold text-center w-full">No Image Provided</span>
            </div>
        }
    </div>

    <!--Title-->
    <div class="absolute bottom-0 left-1/2 transform -translate-x-1/2 translate-y-1/2 z-10
                bg-white w-[90%] rounded-md shadow-lg flex flex-col justify-between items-center pb-6">
        <div class="bg-[#640A16] w-full h-[10px] rounded-tl-md rounded-tr-md"></div>
        <h2 class="text-4xl font-bold pt-2">@training.TrainingName</h2>
        <div class="flex items-center">
            <div class="text-yellow-500 text-xl">⭐⭐⭐⭐⭐</div>
            <div class="ml-2 text-sm text-gray-600">5.0<br />Positive Reviews</div>
        </div>
    </div>
    
</div>

<div class="flex mx-20 gap-4 mb-5">
    <!--Description-->
    <div class="flex flex-col justify-center w-1/3 gap-2 px-4 py-4 bg-white rounded-md shadow-lg sticky top-[100px] h-fit self-start">

        <h2 class="text-2xl font-weight-bold align-self-center">Description</h2>
        <p>@training.Description</p>
    </div>
    <div class="flex flex-col justify-start w-2/3 bg-white rounded-md shadow-lg px-4 py-4 gap-4">
        <!-- Header -->
        <div class="flex justify-between items-center mb-2">
            <h2 class="text-3xl font-bold">Topics</h2>
            <button class="bg-[#EAC231] p-2 rounded-lg font-semibold" onclick="addTopic(@training.Id)">Add Topic +</button>
        </div>

        

        <!-- Topic Card -->
        @foreach (var topic in Model){
        <div class="flex flex-col bg-[#640A16] rounded-md text-white h-[120px] px-4 py-3 text-xs"
          onclick="window.location.href='@Url.Action("TopicDetails", "AdminTopic", new { topicId = topic.Id })'">
     
            <div class="flex justify-between items-center mb-2 w-full">
                <h3 class="text-2xl font-semibold">@topic.TopicName</h3>
                <div class="flex gap-2">
                    <span class="material-symbols-outlined !text-[20px] cursor-pointer"
                          onclick='event.stopPropagation(); openEditTopic(@topic.Id, @topic.TrainingId, "@topic.TopicName", "@topic.Description", @topic.MediaCount, "@topic.AccountFirstName", "@topic.AccountLastName", "@topic.UpdatedTime", @Html.Raw(JsonSerializer.Serialize(@topic.Media)))'>edit</span>
                    <span class="material-symbols-outlined !text-[20px] cursor-pointer" onclick="event.stopPropagation(); openDeleteTopic(@topic.Id, @topic.TrainingId, '@topic.TopicName', @topic.MediaCount, '@topic.AccountFirstName', '@topic.AccountLastName', '@topic.UpdatedTime')">delete</span>
                </div>
            </div>

            <!-- Meta Info -->
            <p>Created by: @topic.AccountFirstName @topic.AccountLastName</p>
            <p>@topic.UpdatedTime.ToString("MMMM dd, yyyy")</p>

            <!-- Attachments -->
            <div class="flex items-center gap-1 mt-auto">
                <span class="material-symbols-outlined !text-[20px]">attachment</span>
                <span>@topic.MediaCount Attachments</span>
            </div>
           
        </div>
        }
    
    </div>

</div>


@await Html.PartialAsync("~/Views/Admin/AddTopic.cshtml", new TopicViewModel())
@await Html.PartialAsync("~/Views/Admin/EditTopic.cshtml", new TopicViewModel())
@await Html.PartialAsync("~/Views/Admin/DeleteTopic.cshtml", new TopicViewModel())

<script type="text/javascript">
    function closeAddTopic(){
        document.getElementById('addTopic').classList.add('hidden')
    }

    function closeEditTopic(){
        document.getElementById('editTopic').classList.add('hidden')
    }

    function closeDeleteTopic(){
        document.getElementById('deleteTopic').classList.add('hidden')
    }
</script>
