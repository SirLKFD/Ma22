@model List<ASI.Basecode.Services.ServiceModels.TopicViewModel>
@{
    ViewData["Title"] = "Ma22 | Topics";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
    var training = ViewData["training"] as TrainingViewModel;
    // this is temporary for development , needs to be modified after
    var limitedModel = Model.Take(6).ToList();
    var firstColumn = limitedModel.Take(3).ToList();
    var secondColumn = limitedModel.Skip(3).ToList();
    double avgRating = (training.Reviews != null && training.Reviews.Any())
        ? training.Reviews.Average(r => r.ReviewScore)
        : 0;
    int fullStars = (int)Math.Floor(avgRating);
    bool hasHalfStar = (avgRating - fullStars) >= 0.5;
    int emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);
}


<!--Placeholder for cover photo-->
<div class="-mx-20 -my-20 flex h-[250px] w-screen items-center justify-center bg-blue-900">
    @if (!string.IsNullOrEmpty(training?.CoverPicture))
    {
        <img src="@training.CoverPicture" alt="Cover Photo" class="h-full w-full object-cover" />
    }
    else
    {
        <div class="flex h-full w-full items-center justify-center bg-gradient-to-br from-[#640A16] via-[#8B1538] to-[#640A16]">
            <div class="animate-[float_6s_ease-in-out_infinite] text-center text-white">
                <span class="material-symbols-outlined mb-2 text-6xl opacity-50">image</span>
                <p class="text-lg font-medium">No Cover Image Provided</p>
            </div>
        </div>
    }
</div>

@if (TempData["EnrollSuccess"] != null)
{
    <div class="mb-4 rounded border border-green-400 bg-green-100 px-4 py-2 text-green-700">
        ✅ You have successfully enrolled in this training!
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="mb-4 rounded border border-red-400 bg-red-100 px-4 py-2 text-red-700">
        ❌ @TempData["ErrorMessage"]
    </div>
}

<div class="flex w-full gap-10">
    <div class="flex w-2/3 flex-col gap-10">
        <div class="flex flex-col gap-5 rounded-lg bg-white p-4 shadow-md">
            <h1 class="font-weight-bold w-3/4 text-4xl">@training.TrainingName</h1>
            <p class="mt-2 w-3/4">@training.Description</p>
            <div class="flex items-center gap-6 text-sm text-slate-500">
                <div class="flex items-center gap-2">
                    <span class="material-symbols-outlined">group</span>
                    <span>@ViewData["EnrollmentCount"] students enrolled</span>
                </div>
                <div class="flex items-center gap-2">
                    <span class="material-symbols-outlined">import_contacts</span>
                    <span>@Model.Count topic@(Model.Count == 1 ? "" : "s")</span>
                </div>
                <div class="flex items-center gap-2">
                    <span class="material-symbols-outlined">schedule</span>
                    <span>@training.DurationName to study</span>
                </div>
            </div>
        </div>
        <div class="flex w-full flex-col gap-2 rounded-lg bg-white p-4 shadow-md">
            <div class="flex items-center space-x-4">
                <span class="material-symbols-outlined rounded-lg bg-[#EAC231] p-2">import_contacts</span>
                <h2 class="font-weight-bold text-2xl">Course Topics</h2>
            </div>
            <p class="text-sm">Explore the comprehensive curriculum designed to build your programming skills step by step</p>
            <div class="grid w-full grid-cols-1 gap-5 md:grid-cols-2">
                @foreach (var topic in Model)
                {
                    var isEnrolled = ViewBag.IsEnrolled != null && (bool)ViewBag.IsEnrolled;
                    if (isEnrolled)
                    {
                        <div class="hover-pointer flex w-full flex-col bg-white p-4 shadow-md transition-all duration-300 hover:scale-110" onclick="window.location.href='@Url.Action("TopicDetails", "UserTopic", new { topicId = topic.Id })'">
                            <p class="text-xl font-semibold">@topic.TopicName</p>
                            <p class="text-sm">@topic.Description</p>
                        </div>
                    }
                    else
                    {
                        <div class="flex w-full flex-col bg-gray-200 p-4 shadow-md opacity-60 cursor-not-allowed relative" title="You must enroll to access this topic">
                            <p class="text-xl font-semibold text-gray-400">@topic.TopicName</p>
                            <p class="text-sm text-gray-400">@topic.Description</p>
                            <div class="absolute inset-0 flex items-center justify-center pointer-events-none">
                                <span class="text-red-500 font-semibold bg-white bg-opacity-80 rounded px-2 py-1 text-xs">Enroll to access</span>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
        <div class="flex w-full flex-col gap-2 rounded-lg bg-white p-4 shadow-md">
            <div class="flex justify-between">
                <div class="flex items-center space-x-4">
                    <span class="material-symbols-outlined rounded-lg bg-[#EAC231] p-2">star</span>
                    <h2 class="font-weight-bold text-2xl">Ratings and Reviews</h2>
                </div>
                <div class="flex items-center space-x-2">
                    <p class="text-2xl font-semibold">
                        @(avgRating > 0 ? avgRating.ToString("0.0") : "No ratings")
                    </p>
                    @for (int i = 0; i < fullStars; i++)
                    {
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 fill-[#EAC231]" viewBox="0 0 24 24">
                            <path d="M12 .587l3.668 7.431L24 9.753l-6 5.845 1.416 8.263L12 18.896l-7.416 4.965L6 15.598 0 9.753l8.332-1.735z" />
                        </svg>
                    }
                    @if (hasHalfStar)
                    {
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" viewBox="0 0 24 24">
                            <defs>
                                <linearGradient id="half">
                                    <stop offset="50%" stop-color="#EAC231"/>
                                    <stop offset="50%" stop-color="white"/>
                                </linearGradient>
                            </defs>
                            <path fill="url(#half)" d="M12 .587l3.668 7.431L24 9.753l-6 5.845 1.416 8.263L12 18.896l-7.416 4.965L6 15.598 0 9.753l8.332-1.735z" />
                        </svg>
                    }
                    @for (int i = 0; i < emptyStars; i++)
                    {
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 fill-gray-300" viewBox="0 0 24 24">
                            <path d="M12 .587l3.668 7.431L24 9.753l-6 5.845 1.416 8.263L12 18.896l-7.416 4.965L6 15.598 0 9.753l8.332-1.735z" />
                        </svg>
                    }
                </div>
            </div>
            <p>See what other students are saying about this course</p>
            <div class="flex flex-col gap-6">
                @if (training.Reviews != null && training.Reviews.Any())
                {
                    var reviewsToShow = training.Reviews.Take(5).ToList();
                    foreach (var review in reviewsToShow)
                    {
                        <div class="flex w-full flex-row items-start bg-white p-4 shadow-md rounded-lg mb-2">
                            <div class="flex-shrink-0 flex items-center justify-center mr-4">
                                @if (!string.IsNullOrEmpty(review.ProfilePicture))
                                {
                                    <img src="@review.ProfilePicture" alt="Profile" class="h-10 w-10 rounded-full object-cover" />
                                }
                                else
                                {
                                    <span class="material-symbols-outlined text-[40px] text-gray-400">person</span>
                                }
                            </div>
                            <div class="flex flex-1 flex-col">
                                <div class="flex items-center gap-2 mb-1">
                                    <span class="font-semibold">@review.AccountFirstName @review.AccountLastName</span>
                                    <span class="text-xs text-gray-400">@review.CreatedTime.ToString("MMM dd, yyyy")</span>
                                </div>
                                <p class="text-base font-semibold mb-1">@review.Title</p>
                                <p class="text-sm text-gray-700">@review.UserReview</p>
                            </div>
                            <div class="flex flex-row items-center justify-end min-w-[90px] ml-4 h-full gap-1">
                                @for (int i = 1; i <= 5; i++)
                                {
                                    if (i <= review.ReviewScore)
                                    {
                                        <span class="material-symbols-outlined text-[#EAC231] text-2xl">star</span>
                                    }
                                    else
                                    {
                                        <span class="material-symbols-outlined text-gray-300 text-2xl">star</span>
                                    }
                                }
                            </div>
                        </div>
                    }
                    <div id="more-reviews-container"></div>
                    @if (training.Reviews.Count > 5)
                    {
                        <div class="flex justify-center mt-4" id="see-more-reviews-wrapper">
                            <button id="loadMoreReviewsBtn" class="cursor-pointer" data-currently-displayed="5" data-total-reviews="@training.Reviews.Count">
                                <span class="material-symbols-outlined animate-bounce text-[50px]">
                                    keyboard_double_arrow_down
                                </span>
                            </button>
                        </div>
                    }
                }
                else
                {
                    <div class="flex w-full flex-col bg-white p-4 text-center text-gray-400 shadow-md rounded-lg">
                        <p class="text-lg font-semibold">No reviews yet for this course.</p>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="flex w-1/3 flex-col gap-10">
        <div class="flex max-h-fit flex-col rounded-lg bg-white p-4 shadow-md">
            <div class="mb-4 flex flex-col items-center gap-2">
                <h1 class="font-weight-bold text-4xl uppercase">Free</h1>
                <p class="mb-2">Full Access to all Content</p>
                @if (ViewBag.IsEnrolled != null && (bool)ViewBag.IsEnrolled)
                {
                    <button disabled class="w-full cursor-default rounded-lg bg-gray-300 px-32 py-2 font-semibold">
                        Enrolled
                    </button>
                }
                else
                {
                    <form method="post" asp-controller="Enrollment" asp-action="Enroll">
                        <input type="hidden" name="trainingId" value="@training.Id" />
                        <input type="hidden" name="trainingName" value="@training.TrainingName">
                        <button type="submit" class="w-full rounded-lg bg-[#EAC231] px-32 py-2 font-semibold">
                            Enroll Now
                        </button>
                    </form>
                }
            </div>
            <hr class="mb-2"/>
            <div class="space-y-3">
                <div class="flex justify-between">
                    <p>Skill Level</p>
                    <p class="max-w-fit rounded-full bg-[#C6FFCD] px-2 py-1 text-xs">@training.SkillLevelName</p>
                </div>
                <div class="flex justify-between">
                    <p>Category</p>
                    <p class="max-w-fit rounded-full bg-[#FFE9C6] px-2 py-1 text-xs">@training.TrainingCategoryName</p>
                </div>
            </div>
        </div>
        <div class="flex max-h-fit flex-col items-center gap-4 rounded-lg bg-white p-4 shadow-md">
            <p class="text-xl font-semibold">Your Instructor</p>
            <div class="flex">
               
                @if (!string.IsNullOrEmpty(@training.AccountPicture))
                {
                    <img src="@training.AccountPicture" alt="Profile" class="h-[50px] w-[50px] rounded-full object-cover" />
                }
                else
                {
                    <span class="material-symbols-outlined !text-[50px]">person</span>
                }
            </div>
            <span>@training.AccountFirstName @training.AccountLastName</span>
           
        </div>
        <!--Ratings Portion-->
        <div class="align-items-center mt-10 flex flex-col justify-center gap-4">
            <span class="material-symbols-outlined rounded-full bg-[#EAC231] p-3 !text-[50px] text-white">star</span>
            <p class="font-weight-bold">What do you think of the Training?</p>
            @if (ViewBag.IsEnrolled != null && (bool)ViewBag.IsEnrolled)
            {
                @if (ViewBag.HasReviewed != null && (bool)ViewBag.HasReviewed)
                {
                    <button class="w-1/2 cursor-not-allowed rounded-xl bg-gray-300 p-2 font-semibold text-gray-500" disabled>Already Reviewed</button>
                    <p class="mt-2 text-center text-green-600">Thank you for your review!</p>
                }
                else
                {
                    <button class="w-1/2 rounded-xl bg-[#EAC231] p-2 font-semibold text-black hover:bg-[#640A16] hover:text-white" onclick="addReview()">Rate</button>
                }
            }
            else
            {
                <button class="w-1/2 cursor-not-allowed rounded-xl bg-gray-300 p-2 font-semibold text-gray-500" disabled>Rate</button>
                <p class="mt-2 text-center text-red-500">You must enroll before you can review</p>
            }
        </div>

    </div>
</div>

@await Html.PartialAsync("~/Views/User/_AddReviewModal.cshtml", new ReviewViewModel())

<script>
    function addReview(){
        document.getElementById('addUserReview').classList.remove('hidden')
    }
    function closeAddReview() {
        const modal = document.getElementById('addUserReview');
        modal.classList.add('hidden');

        // const form = document.getElementById("createuserform");
        // if (form) {
        //     form.reset();
        //     const validator = $(form).validate();
        //     validator.resetForm();
        //     $(form).find(".input-validation-error").removeClass("input-validation-error");
        // }
    }

    let reviewsLoaded = 5;
    const totalReviews = parseInt(document.getElementById('loadMoreReviewsBtn')?.getAttribute('data-total-reviews') || '0');
    const trainingId = '@training.Id';

    function handleSeeMoreButton() {
        // Move the button to the bottom after more reviews are loaded
        const btn = document.getElementById('loadMoreReviewsBtn');
        const wrapper = document.getElementById('see-more-reviews-wrapper');
        if (btn && wrapper) {
            wrapper.parentNode.appendChild(wrapper);
        }
    }

    document.getElementById('loadMoreReviewsBtn')?.addEventListener('click', async function () {
        const btn = this;
        btn.disabled = true;
        btn.querySelector('span').classList.add('animate-spin');
        try {
            const response = await fetch(`/UserTopic/LoadMoreReviews?trainingId=${trainingId}&skip=${reviewsLoaded}&take=5`);
            if (response.ok) {
                const html = await response.text();
                document.getElementById('more-reviews-container').insertAdjacentHTML('beforeend', html);
                reviewsLoaded += 5;
                if (reviewsLoaded >= totalReviews) {
                    btn.style.display = 'none';
                } else {
                    btn.disabled = false;
                    btn.querySelector('span').classList.remove('animate-spin');
                    handleSeeMoreButton();
                }
            } else {
                btn.disabled = false;
                btn.querySelector('span').classList.remove('animate-spin');
            }
        } catch (e) {
            btn.disabled = false;
            btn.querySelector('span').classList.remove('animate-spin');
        }
    });
</script>

