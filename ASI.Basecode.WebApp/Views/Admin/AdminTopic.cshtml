@model ASI.Basecode.Services.ServiceModels.TopicViewModel
@{
    ViewData["Title"] = "Admin Topic Details";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var allTopics = ViewBag.AllTopics as List<ASI.Basecode.Services.ServiceModels.TopicViewModel> ?? new List<ASI.Basecode.Services.ServiceModels.TopicViewModel>();
    var mediaList = Model.Media;
}


<div class="flex w-full space-x-8 min-w-0">
    <div class="flex flex-col w-2/3 gap-8 min-w-0">

        <div class="flex flex-col bg-white w-full rounded-xl shadow-md p-4 gap-4">
            <h1 class="text-5xl uppercase font-semibold mb-2">@Model.TopicName</h1>
            <p>@Model.Description</p>
            <div class="flex items-center justify-start gap-6 text-sm text-slate-500">
                <div class="flex items-center gap-2">
                    <span class="material-symbols-outlined">group</span>
                    <span>
                        Created by <strong class="text-slate-700">@Model.AccountFirstName @Model.AccountLastName</strong>
                    </span>
                </div>
                <div class="flex items-center gap-2">
                    <span class="material-symbols-outlined text-[#EAC231]">star_rate</span>
                    <span>4.8 (2.1k reviews)</span>
                </div>
                <div class="flex items-center gap-2">
                    <span class="material-symbols-outlined">schedule</span>
                    <span>Last updated: @Model.UpdatedTime</span>
                </div>
            </div>
        </div>
        <div class="flex flex-col bg-white w-full rounded-lg shadow-sm p-4">
            <div class="flex space-x-2">
                <span class="material-symbols-outlined !text-[25px] bg-red-100 p-2 rounded-xl">movie</span>
                <div class="flex flex-col">
                    <h2 class="text-xl font-semibold">Video Lessons</h2>
                    <p class="text-sm">@((mediaList?.Where(m => m.MediaType != null && m.MediaType.ToLower().Contains("video")).Count() ?? 0) + " video(s)")</p>
                </div> 
            </div>
            
            <div class="flex overflow-x-auto whitespace-nowrap mt-2 ">
                @if (mediaList != null && mediaList.Any(m => m.MediaType != null && m.MediaType.ToLower().Contains("video")))
                {
                    foreach (var video in mediaList.Where(m => m.MediaType != null && m.MediaType.ToLower().Contains("video")))
                    {
                        <div class="flex flex-col flex-shrink-0 w-[300px] h-[220px] outline outline-2 outline-black m-2 transition-transform duration-200 ease-in-out transform hover:scale-105 hover:shadow-2xl cursor-pointer">
                            <div class="flex w-full h-[150px] items-center justify-center overflow-hidden">
                                <video class="w-full h-full object-cover" controls>
                                    <source src="@video.MediaUrl" type="@video.MediaType">
                                    Your browser does not support the video tag.
                                </video>
                            </div>
                            <div class="bg-[#640A16] h-[70px] text-white p-2 space-y-2">
                                <p class="font-semibold">@(video.Name != null && video.Name.Length > 20 ? video.Name.Substring(0, 20) + "..." : video.Name)</p>
                                <p class="text-xs">Uploaded by @Model.AccountFirstName @Model.AccountLastName</p>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="text-gray-500 p-4">No videos uploaded for this topic.</div>
                }
            </div>

        </div>
        <div class="flex flex-col bg-white w-full  whitespace-nowrap rounded-lg shadow-sm p-4">
            <div class="flex space-x-2">
                <span class="material-symbols-outlined !text-[25px] bg-green-100 p-2 rounded-xl">docs</span>
                <div class="flex flex-col">
                    <h2 class="text-xl font-semibold">Documents</h2>
                    <p class="text-sm">@((mediaList?.Where(m => m.MediaType != null && (m.MediaType.ToLower().Contains("pdf") || m.MediaType.ToLower().Contains("word"))).Count() ?? 0) + " document(s)")</p>
                </div>
            </div>
            @if (mediaList != null && mediaList.Any(m => m.MediaType != null && (m.MediaType.ToLower().Contains("pdf") || m.MediaType.ToLower().Contains("word"))))
            {
                foreach (var doc in mediaList.Where(m => m.MediaType != null && (m.MediaType.ToLower().Contains("pdf") || m.MediaType.ToLower().Contains("word"))))
                {
                    <div class="flex items-center justify-between w-full h-[100px] bg-white rounded-xl shadow-sm p-4 border border-gray-200 m-2 transition-transform duration-200 ease-in-out transform hover:scale-[102%] hover:shadow-2xl cursor-pointer">
                        <div class="flex space-x-2">
                            <span class="material-symbols-outlined !text-[25px] bg-red-100 p-2 rounded-xl">docs</span>
                            <div class="flex flex-col">
                                <h2 class="text-lg font-semibold">@(doc.Name != null && doc.Name.Length > 40 ? doc.Name.Substring(0, 40) + "..." : doc.Name)</h2>
                                <p class="text-xs">Document Resource</p>
                            </div>
                        </div>
                        <div class="flex items-center space-x-2 hover:cursor-pointer hover:bg-[#EAC231] p-2 rounded-lg">
                            <span class="material-symbols-outlined">download</span>
                            <a href="@doc.MediaUrl" target="_blank">Download</a>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="text-gray-500 p-4">No documents uploaded for this topic.</div>
            }
        </div>
        <div class="flex flex-col bg-white w-full rounded-lg shadow-sm p-4">
            <div class="flex space-x-2">
                <span class="material-symbols-outlined !text-[25px] bg-purple-100 p-2 rounded-xl">image</span>
                <div class="flex flex-col">
                    <h2 class="text-xl font-semibold">Visual Examples</h2>
                    <p class="text-sm">@((mediaList?.Where(m => m.MediaType != null && m.MediaType.ToLower().Contains("image")).Count() ?? 0) + " image(s)")</p>
                </div>
            </div>

            <div class="flex overflow-x-auto whitespace-nowrap mt-2 w-full max-w-full min-w-0">
                @if (mediaList != null && mediaList.Any(m => m.MediaType != null && m.MediaType.ToLower().Contains("image")))
                {
                    foreach (var media in mediaList.Where(m => m.MediaType != null && m.MediaType.ToLower().Contains("image")))
                    {
                        <div class="flex flex-col flex-shrink-0 w-[300px] h-[220px] outline outline-2 outline-black m-2 transition-transform duration-200 ease-in-out transform hover:scale-105 hover:shadow-2xl cursor-pointer">
                            <div class="flex w-full h-[120px] items-center justify-center overflow-hidden">
                                <img src="@media.MediaUrl" alt="@media.Name" class="w-full h-full object-cover cursor-pointer" onclick="openImageModal('@media.MediaUrl')" />
                            </div>
                            <div class="bg-[#640A16] h-[100px] text-white p-2 space-y-2">
                                <p class="font-semibold">@(media.Name != null && media.Name.Length > 15 ? media.Name.Substring(0, 15) + "..." : media.Name)</p>
                                <p class="text-xs">Image Resource</p>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="flex items-center text-gray-400 ml-4">No image resources.</div>
                }
            </div>

        </div>
    </div>
    <div class="flex-1">

        <div class="bg-[#640A16] text-white max-h-fit flex flex-col rounded-xl shadow-md p-4">
            <div class="flex items-center space-x-2 justify-center">
                <span class="material-symbols-outlined !text-[40px]">import_contacts</span>
                <h2 class="text-3xl font-semibold">Other Topics</h2>
            </div>
            <div class="flex flex-col gap-4">
                @if (allTopics != null && allTopics.Count > 0)
                {
                    foreach (var t in allTopics.Where(x => x.Id != Model.Id))
                    {
                        <div class="flex flex-col rounded-xl bg-white text-black shadow-sm p-4 border border-gray-200 mt-4">
                            <div class="flex justify-between">
                                <h3 class="text-md font-semibold">@t.TopicName</h3>
                                <a href="@Url.Action("TopicDetails", "AdminTopic", new { topicId = t.Id })" class="material-symbols-outlined hover-pointer">open_in_new</a>
                            </div>
                            <p class="text-xs">@t.Description</p>
                            <div class="flex items-center mt-4 space-x-4">
                                <span class="text-xs bg-[#EAC231] p-2 rounded-full font-semibold">@t.MediaCount Lessons</span>
                                <span class="flex text-xs items-center space-x-2">
                                    <span class="material-symbols-outlined text-[#EAC231]">star_rate</span>
                                    <span>4.8</span>
                                </span>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="text-gray-500 p-4">No other topics found for this training.</div>
                }
            </div>
        </div>

        <!--Ratings Portion-->
        <div class="flex flex-col align-items-center justify-center mt-10 gap-4">
            <span class="material-symbols-outlined bg-[#EAC231] !text-[50px] text-white rounded-full p-3">star</span>
            <p class="font-weight-bold">What Users think of this Training</p>
            <button class="bg-[#EAC231] hover:bg-[#640A16] hover:text-white p-2 text-black rounded-xl font-semibold">View User Reviews</button>
        </div>
    </div>
</div>

<!-- Image Preview Modal -->
<div id="imageModal" class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-60 hidden">
    <span class="absolute top-4 right-8 text-white text-4xl cursor-pointer select-none" onclick="closeImageModal()">&times;</span>
    <img id="modalImage" src="" alt="Preview" class="max-h-[80vh] max-w-[90vw] rounded shadow-lg" />
</div>

<script>
function openImageModal(url) {
    document.getElementById('modalImage').src = url;
    document.getElementById('imageModal').classList.remove('hidden');
}
function closeImageModal() {
    document.getElementById('imageModal').classList.add('hidden');
    document.getElementById('modalImage').src = '';
}
document.getElementById('imageModal').addEventListener('click', function(e) {
    if (e.target === this) closeImageModal();
});
</script>









@* <h2>Topic Details</h2>
@if (topic != null)
{
    <div class="card mb-4">
        <div class="card-body">
            <h4>@topic.TopicName</h4>
            <p><b>Description:</b> @topic.Description</p>
            <p><b>Created By:</b> @ViewBag.Account.FirstName @ViewBag.Account.LastName</p>
            <p><b>Created Time:</b> @topic.CreatedTime</p>
        </div>
    </div>
    <h4>Media</h4>
    <ul>
    @if (mediaList != null && mediaList.Count > 0)
    {
        foreach (var media in mediaList)
        {
            <li>
                <a href="@media.MediaUrl" target="_blank">@media.Name</a>
            </li>
        }
    }
    else
    {
        <li>No media uploaded for this topic.</li>
    }
    </ul>
}
else
{
    <div class="alert alert-warning">Topic not found.</div>
}  *@