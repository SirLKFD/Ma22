@model List<ASI.Basecode.Services.ServiceModels.TopicViewModel>
@using System.Text.Json
@using ASI.Basecode.Services.ServiceModels

@{
    ViewData["Title"] = "Admin Training Topics";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var training = ViewData["training"] as TrainingViewModel;
}
@section NoPadding {}

<link href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined" rel="stylesheet" />

<!-- Cover Section with Foggy Bottom -->
<div class="relative h-[250px] w-full overflow-hidden">
    @if (!string.IsNullOrEmpty(training?.CoverPicture))
    {
        <img src="@training.CoverPicture" alt="Cover Photo" class="h-full w-full object-cover [mask-image:linear-gradient(to_bottom,black_70%,transparent_100%)]" />
    }
    else
    {
        <div class="flex h-full w-full items-center justify-center bg-gradient-to-br from-[#640A16] via-[#8B1538] to-[#640A16]">
            <div class="animate-[float_6s_ease-in-out_infinite] text-center text-white">
                <span class="material-symbols-outlined mb-2 text-6xl opacity-50">image</span>
                <p class="text-lg font-medium">No Cover Image Provided</p>
            </div>
        </div>
    }
</div>

<!-- Title Card -->
<div class="relative z-10 mx-auto -mt-12 w-[95%] max-w-4xl overflow-hidden rounded-xl border border-gray-200 bg-white shadow-2xl">
    <div class="h-[6px] w-full bg-gradient-to-r from-[#640A16] via-[#EAC231] to-[#640A16]"></div>
    <div class="flex flex-col items-center justify-center px-6 py-4">
        <h1 class="text-center text-3xl font-bold text-gray-800 md:text-4xl">@Html.Raw(Html.Encode(training?.TrainingName))</h1>
        <div class="mt-2 flex items-center space-x-2 text-xl text-yellow-500">
            <span>⭐</span><span>⭐</span><span>⭐</span><span>⭐</span><span>⭐</span>
            <div class="ml-2 text-left text-sm text-gray-600">
                <div class="text-base font-bold text-gray-800">5.0</div>
                <div class="text-xs">Positive Reviews</div>
            </div>
        </div>
    </div>
</div>

<!-- Main Body Section -->
<div class="mx-8 mb-8 mt-16 flex flex-col gap-8 lg:mx-20 lg:flex-row">
    <!-- Description Card -->
    <div class="sticky top-[120px] flex h-fit w-full flex-col justify-center gap-4 self-start rounded-2xl border border-gray-200 bg-gradient-to-br from-white to-gray-50 px-6 py-6 shadow-xl lg:w-1/3">
        <div class="mb-2 flex items-center gap-3">
            <span class="material-symbols-outlined text-2xl text-[#640A16]">description</span>
            <h2 class="text-2xl font-bold text-gray-800">Description</h2>
        </div>
        <p class="text-base leading-relaxed text-gray-700">@Html.Raw(Html.Encode(training?.Description))</p>
    </div>

    <!-- Topics Card -->
    <div class="flex w-full flex-col justify-start gap-6 rounded-2xl border border-gray-100 bg-white px-6 py-6 shadow-xl lg:w-2/3">
        <div class="flex flex-col items-start justify-between gap-4 border-b border-gray-100 pb-4 sm:flex-row sm:items-center">
            <div class="flex items-center gap-3">
                <span class="material-symbols-outlined text-3xl text-[#640A16]">topic</span>
                <h2 class="text-3xl font-bold text-gray-800">Training Topics</h2>
                <span class="rounded-full bg-[#640A16] px-3 py-1 text-sm font-medium text-white">@(Model?.Count ?? 0)</span>
            </div>
            <button class="rounded-xl bg-gradient-to-br from-[#EAC231] via-[#F4D03F] to-[#EAC231] px-6 py-3 font-bold text-gray-800 shadow-lg transition-all duration-300 hover:translate-y-[-2px] hover:shadow-2xl" onclick="addTopic(@training?.Id)">Add Topic +</button>
        </div>

        @foreach (var topic in Model)
        {
            <div class="cursor-pointer rounded-xl bg-gradient-to-br from-[#640A16] via-[#7A0F20] to-[#640A16] px-6 py-4 text-sm text-white shadow-lg transition-all duration-300 hover:translate-y-[-8px] hover:shadow-2xl"
                 onclick="window.location.href='@Url.Action("TopicDetails", "AdminTopic", new { topicId = topic.Id })'">
                <div class="mb-2 flex items-center justify-between">
                    <h3 class="text-2xl font-semibold">@topic.TopicName</h3>
                    <div class="flex gap-2">
                        <span class="material-symbols-outlined cursor-pointer text-[20px]"
                              onclick='event.stopPropagation(); openEditTopic(@topic.Id, @topic.TrainingId, "@topic.TopicName", "@topic.Description", @topic.MediaCount, "@topic.AccountFirstName", "@topic.AccountLastName", "@topic.UpdatedTime", @Html.Raw(JsonSerializer.Serialize(topic.Media)))'>edit</span>
                        <span class="material-symbols-outlined cursor-pointer text-[20px]"
                              onclick='event.stopPropagation(); openDeleteTopic(@topic.Id, @topic.TrainingId, "@topic.TopicName", @topic.MediaCount, "@topic.AccountFirstName", "@topic.AccountLastName", "@topic.UpdatedTime")'>delete</span>
                    </div>
                </div>
                <p>Created by: @topic.AccountFirstName @topic.AccountLastName</p>
                <p>@topic.UpdatedTime.ToString("MMMM dd, yyyy")</p>
                <div class="mt-2 flex items-center gap-1">
                    <span class="material-symbols-outlined animate-[pulse_2s_infinite] text-[20px]">attachment</span>
                    <span>@topic.MediaCount Attachments</span>
                </div>
            </div>
        }
    </div>
</div>

<!-- Modals -->
@await Html.PartialAsync("~/Views/Admin/AddTopic.cshtml", new TopicViewModel())
@await Html.PartialAsync("~/Views/Admin/EditTopic.cshtml", new TopicViewModel())
@await Html.PartialAsync("~/Views/Admin/DeleteTopic.cshtml", new TopicViewModel())

<script type="text/javascript">
    function closeAddTopic() {
        document.getElementById('addTopic').classList.add('hidden');
    }
    function closeEditTopic() {
        document.getElementById('editTopic').classList.add('hidden');
    }
    function closeDeleteTopic() {
        document.getElementById('deleteTopic').classList.add('hidden');
    }
</script>
